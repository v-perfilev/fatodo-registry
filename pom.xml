<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.persoff68.fatodo</groupId>
    <artifactId>registry</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>fatodo-registry</name>
    <description>Registry for Fatodo</description>

    <properties>
        <!-- Common variables -->
        <jar.name>fatodo</jar.name>
        <maven.repo.url/>
        <!-- Classes and packages -->
        <main.class>com.persoff68.fatodo.FaToDoRegistryApplication</main.class>
        <root.package>com.persoff68.fatodo</root.package>
        <!-- Dependency versions -->
        <java.version>13</java.version>
        <spring-cloud.version>Hoxton.SR5</spring-cloud.version>
        <lombok.version>1.18.10</lombok.version>
        <logback-kafka-appender.version>0.2.0-RC2</logback-kafka-appender.version>
        <!-- Plugin versions -->
        <maven-surefire-plugin.version>3.0.0-M4</maven-surefire-plugin.version>
        <maven-failsafe-plugin.version>3.0.0-M4</maven-failsafe-plugin.version>
        <properties-maven-plugin.version>1.0.0</properties-maven-plugin.version>
        <sonar-maven-plugin.version>3.7.0.1746</sonar-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.1.1</maven-checkstyle-plugin.version>
        <!-- Plugin variables -->
        <jacoco.ut-report-folder>${project.build.directory}/jacoco/test</jacoco.ut-report-folder>
        <jacoco.ut-report-file>${jacoco.ut-report-folder}/test.exec</jacoco.ut-report-file>
        <jacoco.it-report-folder>${project.build.directory}/jacoco/integrationTest</jacoco.it-report-folder>
        <jacoco.it-report-file>${jacoco.it-report-folder}/integrationTest.exec</jacoco.it-report-file>
        <skipTests>false</skipTests>
        <skipUTs>${skipTests}</skipUTs>
        <skipITs>${skipTests}</skipITs>
        <!-- Profiles -->
        <dev.spring-profile>dev</dev.spring-profile>
        <dev-docker.spring-profile>devDocker</dev-docker.spring-profile>
        <docker.spring-profile>docker</docker.spring-profile>
        <prod.spring-profile>prod</prod.spring-profile>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud management -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Lombok management -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Logging management -->
            <dependency>
                <groupId>com.github.danielwegener</groupId>
                <artifactId>logback-kafka-appender</artifactId>
                <version>${logback-kafka-appender.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring Cloud -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
        <!-- Spring Boot Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>com.github.danielwegener</groupId>
            <artifactId>logback-kafka-appender</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <defaultGoal>spring-boot:run</defaultGoal>
        <finalName>${jar.name}</finalName>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <!-- Spring Boot Maven Plugin Management -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <configuration>
                        <mainClass>${main.class}</mainClass>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>build-info</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Properties Maven Plugin Management -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${properties-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${basedir}/etc/sonar/sonar-project.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Maven Surefire Plugin Management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <skipTests>${skipUTs}</skipTests>
                        <runOrder>alphabetical</runOrder>
                        <excludes>
                            <exclude>**/*IT.*</exclude>
                            <exclude>**/*Tests.*</exclude>
                            <exclude>**/contract/*Test.*</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- Maven Failsafe Plugin Management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                        <skipITs>${skipITs}</skipITs>
                        <runOrder>alphabetical</runOrder>
                        <includes>
                            <include>**/*IT.*</include>
                            <include>**/*Tests.*</include>
                            <include>**/contract/*Test.*</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Jacoco Maven Plugin Management -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-tests</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.ut-report-file}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.ut-report-file}</dataFile>
                                <outputDirectory>${jacoco.ut-report-folder}</outputDirectory>
                            </configuration>
                        </execution>
                        <execution>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.it-report-file}</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-integration-tests</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.it-report-file}</dataFile>
                                <outputDirectory>${jacoco.it-report-folder}</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Sonar Maven Plugin Management-->
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <!-- Maven Checkstyle Plugin Management -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <configuration>
                        <configLocation>${basedir}/etc/checkstyle/checkstyle.xml</configLocation>
                        <encoding>UTF-8</encoding>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <linkXRef>false</linkXRef>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>none</phase>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Spring Boot Maven Plugin Management -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- Properties Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
            </plugin>
            <!-- Maven Surefire Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!-- Maven Failsafe Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <!-- Jacoco Maven Plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <!-- Sonar Maven Plugin -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
            </plugin>
            <!-- Maven Checkstyle Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- dev profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>${dev.spring-profile}</spring.profiles.active>
            </properties>
        </profile>
        <!-- development docker profile -->
        <profile>
            <id>devDocker</id>
            <properties>
                <spring.profiles.active>${dev-docker.spring-profile}</spring.profiles.active>
            </properties>
        </profile>
        <!-- docker profile -->
        <profile>
            <id>docker</id>
            <properties>
                <spring.profiles.active>${docker.spring-profile}</spring.profiles.active>
            </properties>
        </profile>
        <!-- prod profile -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>${prod.spring-profile}</spring.profiles.active>
            </properties>
        </profile>
        <!-- contracts profile -->
        <profile>
            <id>contracts</id>
            <build>
                <plugins>
                    <!-- Maven Failsafe Plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <runOrder>alphabetical</runOrder>
                            <includes>
                                <include>**/*CT.*</include>
                            </includes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <distributionManagement>
        <repository>
            <id>fatodo</id>
            <url>${maven.repo.url}</url>
        </repository>
    </distributionManagement>

</project>
